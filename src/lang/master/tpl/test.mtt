<!DOCTYPE html>
<html lang="en">
<head>
    <link rel="stylesheet" type="text/css" href="/css/::getVariable('css')::/style.css"/>
    <script type="text/javascript" src="/js/::getVariable('js')::/libs.dev.js"></script>
    <script type="text/javascript" src="/js/::getVariable('js')::/app.js"></script>

    <style>
        .ablock{
            margin-bottom: 40px
        }

        .ablock pre {
            padding-top: 20px;
            padding-bottom: 20px;
            background-color: #ccc;
        }
    </style>
</head>
<body style="padding: 16px">
    <div>
        <p>Distrib #::distrib.id::</p>
        <p>Fin ::distrib.orderEndDate::</p>
    </div>

    <br />

    <div>
        <button id="reset-btn">RESET</button>
        <button id="gen-btn">GEN FAKE DATAS</button>
        <button id="add-vol-btn">Register me InNeed and add Vol</button>
        <button id="close-btn">CLOSE DISTRIB</button>
        <button id="resolve-btn">RESOLVE</button>
    </div>
    <br />

    <div class="ablock">
        <h1>Me status</h1>
        <button id="status-btn">Refresh status</button>
        <pre id="status" style="background-color: #f1f1f1"></pre>
        <hr />
    </div>

    <div class="ablock">
        <h1>Actiev slot</h1>
        <div id="activate-slots-wrapper"></div>
        <pre>
            _NeolithicViewsGenerator.activateDistribSlots(HTML_ELEMENT_ID, {
                distribId: DISTRIB_ID,
                slotDuration: NUMBER_TIME,
            })
        </pre>
        <hr />
    </div>

    <div class="ablock">
        <h1>Slots selector</h1>
        <button id="slots-selector-btn">OPEN</button>
        <div id="users-slots-wrapper"></div>
        <pre>
            _NeolithicViewsGenerator.userDistribSlotsSelector(HTML_ELEMENT_ID, {
                distribId: DISTRIB_ID,
            }) 
        </pre>
        <hr />
    </div>

    <div class="ablock">
        <h1>Slots resolved</h1>
        <div id="slots-resolver-wrapper"></div>
        <pre>
            _NeolithicViewsGenerator.distribSlotsResolver(HTML_ELEMENT_ID, {
                distribId: DISTRIB_ID
            });
        </pre>
        <hr />
    </div>

    <div class="ablock">
        <h1>Trads</h1>
        <p><b>A editer dans cagette-ts/packages/cagette-front-core/public/locales/fr/neo/distrib-slots.json</b></p>
        <pre id="trads" style="background-color: #f1f1f1"></pre>
        <hr />
    </div>

    

    <script>
        var distribId = ::distrib.id::;
        var activated = ::distrib.slotsIsActivated::;

        function reset() {
            console.log("reset");
            fetch("http://localhost/api/distributions/"+distribId+"/desactivateSlots", {
                method: "POST"
            }).then(function(res) {
                if (!res.ok) throw new Error(res.statusText);
                document.location.reload(true);
                return res;
            }).catch(function(error) {
                console.log(error)
            })
        }

        function genDatas() {
            console.log("genDatas");
            fetch("http://localhost/api/distributions/"+distribId+"/generateFakeDatas", {
                method: "POST"
            }).then(function(res) {
                if (!res.ok) throw new Error(res.statusText);
                document.location.reload(true);
                return res;
            }).catch(function(error) {
                console.log(error)
            })
        }

        function addVol() {
            console.log("addVol");
            fetch("http://localhost/api/distributions/"+distribId+"/registerVoluntaryForMe", {
                method: "POST"
            }).then(function(res) {
                if (!res.ok) throw new Error(res.statusText);
                document.location.reload(true);
                return res;
            }).catch(function(error) {
                console.log(error)
            })
        }

        function closeDistrib() {
            console.log("closeDistrib");
            fetch("http://localhost/api/distributions/"+distribId+"/closeDistrib", {
                method: "POST"
            }).then(function(res) {
                if (!res.ok) throw new Error(res.statusText);
                document.location.reload(true);
                return res;
            }).catch(function(error) {
                console.log(error)
            })
        }

        function resolveDistrib() {
            console.log("resolve");
            fetch("http://localhost/api/distributions/"+distribId+"/resolve", {
                method: "POST"
            }).then(function(res) {
                if (!res.ok) throw new Error(res.statusText);
                document.location.reload(true);
                return res;
            }).catch(function(error) {
                console.log(error)
            })
        }

        function getStatus() {
            console.log("getStatus");
            fetch("http://localhost/api/distributions/"+distribId+"/slots/me")
            .then(function(res) {
                if (!res.ok) throw new Error(res.statusText);
                return res.json();
            }).then(function(res) {
                document.getElementById("status").innerHTML= JSON.stringify(res, null, 2)
                return res;
            })
            .catch(function(error) {
                console.log(error)
            })
        }

        function getTrads() {
            console.log("getTrads");
            fetch("http://localhost/locales/fr/neo/distrib-slots.json")
            .then(function(res) {
                if (!res.ok) throw new Error(res.statusText);
                return res.json();
            }).then(function(res) {
                document.getElementById("trads").innerHTML= JSON.stringify(res, null, 2)
                return res;
            })
            .catch(function(error) {
                console.log(error)
            })
        }
        
        function openSlotsSelector() {
            if (activated) {        
                _NeolithicViewsGenerator.userDistribSlotsSelector("users-slots-wrapper", {
                    distribId: ::distrib.id::,
                    onCancel: function() {
                        console.log("onCancel", document.getElementById("users-slots-wrapper"), document.getElementById("users-slots-wrapper").innerHTML)
                        document.getElementById("users-slots-wrapper").innerHTML=""
                    },
                    onRegister: function() {
                        document.location.reload(true);
                    }
                }) 
            }
        }

        document.getElementById("reset-btn").addEventListener("click", reset);
        document.getElementById("gen-btn").addEventListener("click", genDatas);
        document.getElementById("add-vol-btn").addEventListener("click", addVol);
        document.getElementById("close-btn").addEventListener("click", closeDistrib);
        document.getElementById("resolve-btn").addEventListener("click", resolveDistrib);
        document.getElementById("status-btn").addEventListener("click", getStatus);
        document.getElementById("slots-selector-btn").addEventListener("click", openSlotsSelector);
    

        _NeolithicViewsGenerator.activateDistribSlots("activate-slots-wrapper", {
            distribId: ::distrib.id::,
            slotDuration: 1000 * 60 * 15,
        })

       

         _NeolithicViewsGenerator.distribSlotsResolver("slots-resolver-wrapper", {
            distribId: ::distrib.id::
        }); 

        document.addEventListener("DOMContentLoaded", function() {
            getStatus();
            getTrads();
        });
        
    </script>


</body>
</html>